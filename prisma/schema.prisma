// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  profile_image String     @default("https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541")
  name          String
  document      String
  password_hash String
  birth_date    String
  phone         String
  adress        String?
  role          String     @default("USER")
  graduation    String?
  Course        Course[]
  Question      Question[]
  Answer        Answer[]

  @@map("User")
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Float
  banner      String?  @default("https://gustavopmaiabucket.s3.us-east-1.amazonaws.com/curso1.png?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjED4aCXVzLWVhc3QtMSJIMEYCIQDOa1CdCf2JUhsHtqrzTCazWgaUUZjuith59BDhihutlQIhAOLj31Zf0JRJTByhTDnnvEx3dH7wMkODSaRiphggezhUKu0CCNf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMODkyNDQyNTQ0MjQxIgyVKLRBdLm%2BElVdna0qwQK5semVxZEHmzDOp7VJKC0ikIFwZ0RRg2bKZ347b4l1sdzniMkdqwKZmf71uJcKrT0aG3JaDzHiHg6y4HHQktKbSjLStqdE1wPAvqIymjDA9eKpJYdnJd6gXbPrwX4OljHUv3H%2BVzAKjA%2BlhwuZn6xy62pXdxAhL5q%2FCqDv0rVdJPObHLy9KNJwUIfyF5LoonFtuwCqT6zIE9%2FhoibsWzmUoO6oBiRbXzv4%2Bccmtn9G2zxzC%2Bi1qd6NZNS4fqkUeNXJSK6S0XZcrOZrMyXo5hiURdI8k%2F9ATf67CwmBVcG27EvkY1wM0jAx2pMu%2BTVmarz%2BszKYARsKRncIiMaoXOdAcyG3PTyjCrL5JaF6J7jSJXFqYWr86QX1IxZlJSBPzvRJNSQEhzsu95rGp6UNnEhV12BpoVUGaFnBW4jQbExNFvQw%2FM%2B7swY6sgIXl6AF%2Fj5hbHmujE8NOR%2FAJKxdzOYihYpsxPsjxQwELpL1qBHkNeQoJe2ojYa%2Fd67%2F%2BLxjl4JpeZexsSVGc8qQdzE141%2BayWZyEySVqrgk4Q7WjrrZoRe58dFtFGkHa8T%2F%2BrKxDFKuvmQzrDQOyrimrTWW1hKeW0kizraLcKtIvUmxuwHiFAOnbUXhG7wJRCcujpmNNmmeLQ6ucwW7KKemJh0e8fPK%2FKaLPIDkCXqbgu4inpvGhwRAF6dnx5K8yG7nsrc8xOTv3sVhYg59pnJx9yBEZowqWzsFCJOAleskEsImlTKML%2FEvbV4kbt6VfuAxLkVs6yY7YRU9tvyJhjWGYZEFzbMeu0xTHF3gkUkZ3zSqGdXlffnTUqRuHB3EOwo32i%2BO%2BnDieumC%2BoUXsWPcX5Y%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20240616T133510Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIA47SNYRBYWNYJKSCG%2F20240616%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=65d4bff971738a52e0eb8e8cf0e8614ad3aa7650fea290fd3efd4c04cd7c3b3c")
  userId      String
  rating      Int      @default(0)
  user        User     @relation(references: [id], fields: [userId])
  lesson      Lesson[]
  test        Test[]

  @@map("Course")
}

model Lesson {
  id          String     @id @default(uuid())
  title       String
  description String
  courseId    String
  videoUrl    String
  questions   Question[]
  course      Course     @relation(fields: [courseId], references: [id])

  @@map("Lesson")
}

model Question {
  id          String   @id @default(uuid())
  title       String
  description String
  lessonId    String
  lesson      Lesson   @relation(fields: [lessonId], references: [id])
  answers     Answer[]
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?

  @@map("Question")
}

model Answer {
  id          String   @id @default(uuid())
  title       String
  description String
  questionId  String
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
  question    Question @relation(fields: [questionId], references: [id])

  @@map("Answer")
}

model Test {
  id          String     @id @default(uuid())
  title       String
  description String
  courseId    String
  exercises   Exercise[]
  course      Course     @relation(fields: [courseId], references: [id])

  @@map("Test")
}

model Exercise {
  id       String @id @default(uuid())
  title    String
  question String
  answer   String
  testId   String
  test     Test   @relation(fields: [testId], references: [id])

  @@map("Exercise")
}
